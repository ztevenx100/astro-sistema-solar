---
import type { Planet } from '../data/planets';

export interface Props {
  planet: Planet;
  index: number;
}

const { planet, index } = Astro.props;
const delayAnimation = index * 0.5; // Stagger animation
---

<div 
  class="planet-orbit absolute rounded-full border border-gray-600 border-opacity-30"
  style={`
    width: ${planet.orbitRadius * 2}px;
    height: ${planet.orbitRadius * 2}px;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    --orbit-radius: ${planet.orbitRadius}px;
    --orbit-duration: ${planet.orbitSpeed}s;
    animation-delay: ${delayAnimation}s;
  `}
>
  <!-- Planet -->
  <div 
    class="planet-container absolute orbit group cursor-pointer"
    style="
      left: 50%;
      top: 50%;
      margin-left: var(--orbit-radius);
      margin-top: -15px;
    "
  >
    <a href={`/planets/${planet.id}`} class="block">
      <div 
        class={`planet relative rounded-full transition-all duration-300 hover:scale-125 planet-spin ${planet.color === '#FDB813' ? 'glow-yellow' : planet.color === '#6B93D6' ? 'glow-blue' : planet.color === '#CD5C5C' ? 'glow-red' : 'glow-purple'}`}
        style={`
          width: ${Math.max(15, Math.min(30, planet.diameter / 5000))}px;
          height: ${Math.max(15, Math.min(30, planet.diameter / 5000))}px;
          background: linear-gradient(135deg, ${planet.color}dd 0%, ${planet.color} 50%, ${planet.color}aa 100%);
          --spin-duration: ${planet.rotationPeriod > 0 ? Math.abs(planet.rotationPeriod) / 100 : 10}s;
          animation-direction: ${planet.rotationPeriod < 0 ? 'reverse' : 'normal'};
        `}
      >
        <!-- Planet surface details -->
        <div class="absolute inset-0 rounded-full opacity-40">
          <div class="w-full h-full rounded-full bg-gradient-to-br from-white via-transparent to-transparent"></div>
        </div>
        
        <!-- Planet shadow -->
        <div class="absolute inset-0 rounded-full">
          <div class="w-full h-full rounded-full bg-gradient-to-l from-black via-transparent to-transparent opacity-20"></div>
        </div>
      </div>
      
      <!-- Planet info tooltip -->
      <div class="planet-info absolute bottom-full mb-2 left-1/2 transform -translate-x-1/2 glass-effect rounded-lg p-3 opacity-0 group-hover:opacity-100 transition-all duration-300 z-30 pointer-events-none">
        <h3 class="font-space font-bold text-star text-sm mb-1">{planet.name}</h3>
        <div class="text-xs space-y-1">
          <p class="text-gray-300">Distancia: {planet.distanceFromSun.toLocaleString()} millones km</p>
          <p class="text-gray-400">Lunas: {planet.moons}</p>
          <p class="text-gray-400">Año: {planet.orbitalPeriod} días terrestres</p>
        </div>
        <div class="text-xs text-blue-300 mt-2 font-medium">Clic para explorar →</div>
      </div>
    </a>
  </div>
</div>

<style>
  .planet-orbit {
    pointer-events: none;
  }
  
  .planet-container {
    pointer-events: auto;
  }
  
  .planet-info {
    min-width: 180px;
    background: rgba(0, 0, 0, 0.9);
    backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  }
  
  .planet:hover {
    filter: brightness(1.2);
  }
  
  /* Responsive planet sizes */
  @media (max-width: 768px) {
    .planet-orbit {
      transform: translate(-50%, -50%) scale(0.8);
    }
    
    .planet-info {
      min-width: 150px;
      font-size: 0.7rem;
    }
  }
  
  @media (max-width: 480px) {
    .planet-orbit {
      transform: translate(-50%, -50%) scale(0.6);
    }
    
    .planet-info {
      min-width: 120px;
      font-size: 0.65rem;
    }
  }
</style>
