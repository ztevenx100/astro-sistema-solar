---
import type { Planet } from '../data/planets';
import { planetsData } from '../data/planets';

interface Props {
  currentPlanet: Planet;
}

const { currentPlanet } = Astro.props;

// Encontrar el índice del planeta actual
const currentIndex = planetsData.findIndex(p => p.id === currentPlanet.id);
const previousPlanet = currentIndex > 0 ? planetsData[currentIndex - 1] : planetsData[planetsData.length - 1];
const nextPlanet = currentIndex < planetsData.length - 1 ? planetsData[currentIndex + 1] : planetsData[0];

// Función para obtener el orden desde el Sol
const getOrderFromSun = (planetId: string) => {
  const order = ['mercury', 'venus', 'earth', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune'];
  return order.indexOf(planetId) + 1;
};
---

<section class="planet-navigation py-16 px-6 bg-gradient-to-b from-black via-gray-900 to-black">
  <div class="max-w-6xl mx-auto">
    
    <!-- Current Planet Summary -->
    <div class="current-planet-summary glass-effect rounded-xl p-8 mb-12 text-center">
      <div class="flex items-center justify-center mb-6">
        <div 
          class="w-16 h-16 rounded-full mr-4 shadow-lg"
          style={`background: linear-gradient(135deg, ${currentPlanet.color}dd 0%, ${currentPlanet.color} 50%, ${currentPlanet.color}aa 100%);`}
        ></div>
        <div class="text-left">
          <h2 class="font-space text-2xl font-bold text-white">{currentPlanet.name}</h2>
          <p class="text-gray-400">{getOrderFromSun(currentPlanet.id)}° planeta desde el Sol</p>
        </div>
      </div>
      
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
        <div class="stat-item">
          <p class="text-gray-400">Distancia</p>
          <p class="text-white font-medium">{currentPlanet.distance}</p>
        </div>
        <div class="stat-item">
          <p class="text-gray-400">Diámetro</p>
          <p class="text-white font-medium">{currentPlanet.diameter.toLocaleString()} km</p>
        </div>
        <div class="stat-item">
          <p class="text-gray-400">Lunas</p>
          <p class="text-white font-medium">{currentPlanet.moons === 0 ? 'Ninguna' : currentPlanet.moons}</p>
        </div>
        <div class="stat-item">
          <p class="text-gray-400">Año</p>
          <p class="text-white font-medium">{currentPlanet.orbitalPeriodFormatted}</p>
        </div>
      </div>
    </div>

    <!-- Navigation Controls -->
    <div class="navigation-controls flex items-center justify-between mb-12">
      
      <!-- Previous Planet -->
      <a 
        href={`/planets/${previousPlanet.id}`}
        class="nav-button group flex items-center space-x-4 glass-effect rounded-xl p-6 hover:transform hover:scale-105 transition-all duration-300"
      >
        <svg class="w-6 h-6 text-gray-400 group-hover:text-white transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        <div class="text-left">
          <p class="text-gray-400 text-sm">Anterior</p>
          <p class="text-white font-space font-bold">{previousPlanet.name}</p>
        </div>
        <div 
          class="w-12 h-12 rounded-full"
          style={`background: linear-gradient(135deg, ${previousPlanet.color}dd 0%, ${previousPlanet.color} 50%, ${previousPlanet.color}aa 100%);`}
        ></div>
      </a>

      <!-- Solar System Overview -->
      <a 
        href="/"
        class="nav-button group flex flex-col items-center space-y-2 glass-effect rounded-xl p-6 hover:transform hover:scale-105 transition-all duration-300"
      >
        <svg class="w-8 h-8 text-yellow-400 group-hover:text-yellow-300 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
        </svg>
        <div class="text-center">
          <p class="text-white font-space font-bold text-sm">Sistema Solar</p>
          <p class="text-gray-400 text-xs">Vista general</p>
        </div>
      </a>

      <!-- Next Planet -->
      <a 
        href={`/planets/${nextPlanet.id}`}
        class="nav-button group flex items-center space-x-4 glass-effect rounded-xl p-6 hover:transform hover:scale-105 transition-all duration-300"
      >
        <div 
          class="w-12 h-12 rounded-full"
          style={`background: linear-gradient(135deg, ${nextPlanet.color}dd 0%, ${nextPlanet.color} 50%, ${nextPlanet.color}aa 100%);`}
        ></div>
        <div class="text-right">
          <p class="text-gray-400 text-sm">Siguiente</p>
          <p class="text-white font-space font-bold">{nextPlanet.name}</p>
        </div>
        <svg class="w-6 h-6 text-gray-400 group-hover:text-white transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>

    <!-- All Planets Grid -->
    <div class="all-planets-grid">
      <h3 class="font-space font-bold text-white text-xl mb-6 text-center">Explorar Otros Planetas</h3>
      <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-4">
        {planetsData.map((planet, index) => (
          <a 
            href={`/planets/${planet.id}`}
            class={`planet-grid-item group text-center p-4 rounded-xl transition-all duration-300 ${
              planet.id === currentPlanet.id ? 
              'bg-blue-900 bg-opacity-30 border-2 border-blue-400' : 
              'glass-effect hover:transform hover:scale-110'
            }`}
          >
            <div 
              class={`w-12 h-12 rounded-full mx-auto mb-2 transition-all duration-300 ${
                planet.id === currentPlanet.id ? 'ring-2 ring-blue-400' : 'group-hover:scale-110'
              }`}
              style={`background: linear-gradient(135deg, ${planet.color}dd 0%, ${planet.color} 50%, ${planet.color}aa 100%);`}
            ></div>
            <p class={`font-space text-sm font-medium ${
              planet.id === currentPlanet.id ? 'text-blue-300' : 'text-white group-hover:text-star'
            }`}>
              {planet.name}
            </p>
            <p class="text-xs text-gray-400">{getOrderFromSun(planet.id)}° planeta</p>
          </a>
        ))}
      </div>
    </div>

    <!-- Quick Actions -->
    <div class="quick-actions mt-12 flex flex-wrap justify-center gap-4">
      <button 
        onclick="window.scrollTo({top: 0, behavior: 'smooth'})"
        class="action-button glass-effect rounded-lg px-6 py-3 flex items-center space-x-2 hover:transform hover:scale-105 transition-all duration-300"
      >
        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 11l5-5m0 0l5 5m-5-5v12"></path>
        </svg>
        <span class="text-white text-sm">Volver al inicio</span>
      </button>
      
      <button 
        onclick="window.print()"
        class="action-button glass-effect rounded-lg px-6 py-3 flex items-center space-x-2 hover:transform hover:scale-105 transition-all duration-300"
      >
        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"></path>
        </svg>
        <span class="text-white text-sm">Imprimir</span>
      </button>
      
      <button 
        onclick="navigator.share ? navigator.share({title: 'Información sobre ${currentPlanet.name}', url: window.location.href}) : navigator.clipboard.writeText(window.location.href)"
        class="action-button glass-effect rounded-lg px-6 py-3 flex items-center space-x-2 hover:transform hover:scale-105 transition-all duration-300"
      >
        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
        </svg>
        <span class="text-white text-sm">Compartir</span>
      </button>
    </div>

  </div>
</section>

<style>
  .glass-effect {
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .nav-button:hover, .action-button:hover {
    border-color: rgba(255, 255, 255, 0.2);
    background: rgba(0, 0, 0, 0.7);
  }

  .planet-grid-item:not(.current):hover {
    border-color: rgba(255, 255, 255, 0.2);
    background: rgba(0, 0, 0, 0.7);
  }

  .current-planet-summary {
    background: rgba(0, 0, 0, 0.4);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  @media (max-width: 768px) {
    .navigation-controls {
      flex-direction: column;
      gap: 1rem;
    }
    
    .nav-button {
      width: 100%;
      justify-content: center;
    }
  }
</style>
