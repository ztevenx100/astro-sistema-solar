---
import { planetsData } from '../data/planets';
import Sun from './Sun.astro';
import Planet from './Planet.astro';
import SimulationControls from './SimulationControls.astro';
---

<div class="solar-system-container w-full h-screen flex items-center justify-center relative overflow-hidden z-10">
  
  <!-- Solar System -->
  <div class="solar-system relative" style="width: 1000px; height: 1000px;">
    
    <!-- Orbit lines (visible guides) -->
    {planetsData.map((planet) => (
      <div 
        class="orbit-line absolute rounded-full border border-gray-500 border-opacity-20"
        style={`
          width: ${planet.orbitRadius * 2}px;
          height: ${planet.orbitRadius * 2}px;
          left: 50%;
          top: 50%;
          transform: translate(-50%, -50%);
          pointer-events: none;
        `}
      ></div>
    ))}
    
    <!-- Central Sun -->
    <div class="absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 z-10">
      <Sun />
    </div>
    
    <!-- Planets with orbits -->
    {planetsData.map((planet, index) => (
      <Planet planet={planet} index={index} />
    ))}
    
  </div>
  
  <!-- Navigation Panel Mejorado - Se oculta en secci√≥n de constelaciones -->
  <div id="navigation-panel" class="navigation-panel fixed top-6 left-6 glass-effect rounded-xl p-4 z-40 transition-all duration-300 solar-system-only">
    <!-- Bot√≥n de minimizar/cerrar -->
    <div class="flex items-center justify-between mb-3">
      <h2 class="font-space font-bold text-star text-lg">Sistema Solar</h2>
      <div class="flex space-x-1">
        <!-- Bot√≥n minimizar -->
        <button 
          id="minimize-nav-panel" 
          class="w-6 h-6 rounded-full bg-yellow-500 bg-opacity-20 hover:bg-opacity-40 text-yellow-400 hover:text-yellow-300 transition-all duration-200 flex items-center justify-center text-xs font-bold"
          title="Minimizar panel"
        >
          ‚àí
        </button>
        <!-- Bot√≥n cerrar -->
        <button 
          id="close-nav-panel" 
          class="w-6 h-6 rounded-full bg-red-500 bg-opacity-20 hover:bg-opacity-40 text-red-400 hover:text-red-300 transition-all duration-200 flex items-center justify-center text-sm font-bold"
          title="Cerrar panel"
        >
          √ó
        </button>
      </div>
    </div>
    
    <!-- Contenido del panel (navegaci√≥n) -->
    <div id="nav-panel-content" class="nav-content space-y-2">
      {planetsData.map((planet) => (
        <a 
          href={`/planets/${planet.id}`}
          class="block text-sm text-gray-300 hover:text-white transition-colors duration-200 hover:bg-white hover:bg-opacity-10 rounded px-2 py-1"
        >
          <span class="inline-block w-3 h-3 rounded-full mr-2" style={`background: ${planet.color};`}></span>
          {planet.name}
        </a>
      ))}
    </div>
  </div>
  
  <!-- Bot√≥n para mostrar el panel cuando est√° oculto -->
  <button 
    id="show-nav-panel" 
    class="nav-toggle-btn fixed top-6 left-6 glass-effect rounded-full p-3 z-40 transition-all duration-300 hidden hover:scale-110"
    title="Mostrar navegaci√≥n"
  >
    <svg class="w-6 h-6 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
    </svg>
  </button>
  
  <!-- Bot√≥n flotante cuando est√° minimizado -->
  <div 
    id="nav-panel-minimized" 
    class="navigation-panel-minimized fixed top-6 left-6 glass-effect rounded-xl p-3 z-40 transition-all duration-300 hidden cursor-pointer hover:scale-105"
    title="Expandir navegaci√≥n"
  >
    <div class="flex items-center space-x-2">
      <div class="w-3 h-3 bg-blue-400 rounded-full animate-pulse"></div>
      <span class="font-space font-bold text-star text-sm">Sistema Solar</span>
      <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
      </svg>
    </div>
  </div>
  
  <!-- Info Panel Mejorado -->
  <div id="info-panel" class="info-panel fixed bottom-6 right-6 glass-effect rounded-xl p-5 z-40 max-w-sm transition-all duration-300">
    <!-- Bot√≥n de cerrar -->
    <button 
      id="close-info-panel" 
      class="absolute top-3 right-3 w-6 h-6 rounded-full bg-red-500 bg-opacity-20 hover:bg-opacity-40 text-red-400 hover:text-red-300 transition-all duration-200 flex items-center justify-center text-sm font-bold"
      title="Cerrar panel"
    >
      √ó
    </button>
    
    <!-- Contenido del panel -->
    <div class="panel-content">
      <div class="flex items-center mb-3">
        <div class="w-3 h-3 bg-blue-400 rounded-full mr-2 animate-pulse"></div>
        <h3 class="font-space font-bold text-star text-lg">Sistema Solar Interactivo</h3>
      </div>
      
      <div class="space-y-3 text-sm">
        <div class="info-item">
          <p class="text-gray-300 leading-relaxed">
            ü™ê <strong class="text-blue-300">Explora:</strong> Haz clic en cualquier planeta para descubrir sus caracter√≠sticas √∫nicas
          </p>
        </div>
        
        <div class="info-item">
          <p class="text-gray-300 leading-relaxed">
            ‚≠ê <strong class="text-purple-300">Constelaciones:</strong> Navega por las constelaciones en los bordes para viajar entre planetas
          </p>
        </div>
        
        <div class="info-item">
          <p class="text-gray-300 leading-relaxed">
            üåå <strong class="text-green-300">Tiempo Real:</strong> Las √≥rbitas planetarias se actualizan continuamente
          </p>
        </div>
      </div>
      
      <!-- Estad√≠sticas del sistema -->
      <div class="mt-4 pt-3 border-t border-gray-600 border-opacity-30">
        <div class="grid grid-cols-2 gap-2 text-xs">
          <div class="text-center">
            <div class="text-yellow-400 font-bold">8</div>
            <div class="text-gray-400">Planetas</div>
          </div>
          <div class="text-center">
            <div class="text-blue-400 font-bold">18</div>
            <div class="text-gray-400">Constelaciones</div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Bot√≥n para mostrar el panel cuando est√° oculto -->
  <button 
    id="show-info-panel" 
    class="info-toggle-btn fixed bottom-6 right-6 glass-effect rounded-full p-3 z-40 transition-all duration-300 hidden hover:scale-110"
    title="Mostrar informaci√≥n"
  >
    <svg class="w-6 h-6 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
    </svg>
  </button>
  
  <!-- Simulation Controls -->
  <SimulationControls />
  
  <!-- Mobile controls -->
  <div class="mobile-controls fixed bottom-4 left-1/2 transform -translate-x-1/2 md:hidden z-40">
    <button 
      id="planetListToggle"
      class="glass-effect rounded-full p-3 text-white hover:bg-white hover:bg-opacity-20 transition-all duration-200"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>
  </div>
  
  <!-- Mobile planet list -->
  <div id="mobilePlanetList" class="mobile-planet-list fixed inset-x-4 bottom-20 glass-effect rounded-xl p-4 z-50 hidden">
    <h3 class="font-space font-bold text-star text-base mb-3">Planetas</h3>
    <div class="grid grid-cols-2 gap-2">
      {planetsData.map((planet) => (
        <a 
          href={`/planets/${planet.id}`}
          class="block text-sm text-gray-300 hover:text-white transition-colors duration-200 hover:bg-white hover:bg-opacity-10 rounded px-3 py-2 text-center"
        >
          <div class="w-4 h-4 rounded-full mx-auto mb-1" style={`background: ${planet.color};`}></div>
          {planet.name}
        </a>
      ))}
    </div>
  </div>
</div>

<script>
  // Mobile menu toggle
  const toggleButton = document.getElementById('planetListToggle');
  const mobileList = document.getElementById('mobilePlanetList');
  
  if (toggleButton && mobileList) {
    toggleButton.addEventListener('click', () => {
      mobileList.classList.toggle('hidden');
    });
    
    // Close when clicking outside
    document.addEventListener('click', (e) => {
      if (!toggleButton.contains(e.target as Node) && !mobileList.contains(e.target as Node)) {
        mobileList.classList.add('hidden');
      }
    });
  }
</script>

<style>
  .solar-system-container {
    perspective: 1000px;
  }
  
  .solar-system {
    transform-style: preserve-3d;
  }
  
  .constellation-legend {
    background: rgba(0, 5, 15, 0.95);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(147, 51, 234, 0.3);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4), 0 0 20px rgba(147, 51, 234, 0.2);
    transform: translateX(0);
    opacity: 1;
  }

  .constellation-legend.hidden {
    transform: translateX(100%);
    opacity: 0;
    pointer-events: none;
  }

  .constellation-legend-toggle-btn {
    background: rgba(0, 5, 15, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(147, 51, 234, 0.3);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
  }

  .constellation-legend-toggle-btn:hover {
    border-color: rgba(147, 51, 234, 0.5);
    box-shadow: 0 6px 24px rgba(147, 51, 234, 0.3);
  }

  .constellation-item {
    padding: 8px 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.2s ease;
  }

  .constellation-item:last-child {
    border-bottom: none;
  }

  .constellation-item:hover {
    background: rgba(147, 51, 234, 0.1);
    border-radius: 6px;
    padding-left: 4px;
    padding-right: 4px;
  }

  .legend-content::-webkit-scrollbar {
    width: 4px;
  }

  .legend-content::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 2px;
  }

  .legend-content::-webkit-scrollbar-thumb {
    background: rgba(147, 51, 234, 0.4);
    border-radius: 2px;
  }

  .legend-content::-webkit-scrollbar-thumb:hover {
    background: rgba(147, 51, 234, 0.6);
  }

  #close-constellation-legend {
    transition: all 0.2s ease;
    font-size: 14px;
    line-height: 1;
  }

  #close-constellation-legend:hover {
    transform: scale(1.1);
    background-color: rgba(239, 68, 68, 0.3);
  }

  .navigation-panel {
    background: rgba(0, 5, 15, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(64, 224, 255, 0.2);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4), 0 0 20px rgba(64, 224, 255, 0.1);
    transform: translateX(0);
    opacity: 1;
    max-width: 250px;
    max-height: 400px;
    overflow-y: auto;
  }

  /* Ocultar panel del sistema solar en secci√≥n de constelaciones */
  .navigation-panel.solar-system-only {
    transition: all 0.5s ease;
  }

  .navigation-panel.solar-system-only.hide-in-constellations {
    transform: translateX(-110%);
    opacity: 0;
    pointer-events: none;
  }

  .navigation-panel.hidden {
    transform: translateX(-100%);
    opacity: 0;
    pointer-events: none;
  }

  .navigation-panel.minimized .nav-content {
    max-height: 0;
    overflow: hidden;
    opacity: 0;
    transition: all 0.3s ease;
  }

  .navigation-panel-minimized {
    background: rgba(0, 5, 15, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(64, 224, 255, 0.2);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
    max-width: 200px;
  }

  .nav-toggle-btn {
    background: rgba(0, 5, 15, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(64, 224, 255, 0.3);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
  }

  .nav-toggle-btn:hover {
    border-color: rgba(64, 224, 255, 0.5);
    box-shadow: 0 6px 24px rgba(64, 224, 255, 0.2);
  }

  .nav-content {
    max-height: 400px;
    overflow-y: auto;
    transition: all 0.3s ease;
  }

  .nav-content::-webkit-scrollbar {
    width: 4px;
  }

  .nav-content::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 2px;
  }

  .nav-content::-webkit-scrollbar-thumb {
    background: rgba(64, 224, 255, 0.3);
    border-radius: 2px;
  }

  .nav-content::-webkit-scrollbar-thumb:hover {
    background: rgba(64, 224, 255, 0.5);
  }

  #minimize-nav-panel,
  #close-nav-panel {
    transition: all 0.2s ease;
    font-size: 12px;
    line-height: 1;
  }

  #minimize-nav-panel:hover,
  #close-nav-panel:hover {
    transform: scale(1.1);
  }
  
  .info-panel {
    background: rgba(0, 5, 15, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(64, 224, 255, 0.2);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4), 0 0 20px rgba(64, 224, 255, 0.1);
    transform: translateY(0);
    opacity: 1;
  }

  .info-panel.hidden {
    transform: translateY(100px);
    opacity: 0;
    pointer-events: none;
  }

  .info-toggle-btn {
    background: rgba(0, 5, 15, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(64, 224, 255, 0.3);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
  }

  .info-toggle-btn:hover {
    border-color: rgba(64, 224, 255, 0.5);
    box-shadow: 0 6px 24px rgba(64, 224, 255, 0.2);
  }

  .info-item {
    position: relative;
    padding: 8px 0;
  }

  .info-item::before {
    content: '';
    position: absolute;
    left: -12px;
    top: 12px;
    width: 4px;
    height: 4px;
    background: linear-gradient(45deg, #40E0FF, #8A2BE2);
    border-radius: 50%;
    box-shadow: 0 0 8px rgba(64, 224, 255, 0.4);
  }

  #close-info-panel {
    transition: all 0.2s ease;
    font-size: 14px;
    line-height: 1;
  }

  #close-info-panel:hover {
    transform: scale(1.1);
    background-color: rgba(239, 68, 68, 0.3);
  }
  
  .mobile-planet-list {
    background: rgba(0, 0, 0, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
  
  /* Responsive adjustments */
  @media (max-width: 1024px) {
    .solar-system {
      width: 800px;
      height: 800px;
    }
  }
  
  @media (max-width: 768px) {
    .solar-system {
      width: 600px;
      height: 600px;
    }
    
    .navigation-panel,
    .navigation-panel-minimized,
    .nav-toggle-btn {
      display: none;
    }

    .constellation-legend {
      position: fixed;
      top: auto;
      bottom: 6rem;
      right: 1rem;
      left: 1rem;
      max-width: none;
      transform: translateY(0);
    }

    .constellation-legend.hidden {
      transform: translateY(calc(100% + 2rem));
    }

    .constellation-legend-toggle-btn {
      position: fixed;
      top: auto;
      bottom: 6rem;
      right: 1rem;
      transform: none;
    }
    
    .info-panel {
      position: fixed;
      bottom: 1rem;
      right: 1rem;
      left: 1rem;
      margin: 0;
      max-width: none;
      transform: translateY(0);
    }

    .info-panel.hidden {
      transform: translateY(calc(100% + 2rem));
    }
    
    .info-toggle-btn {
      right: 1rem;
      bottom: 1rem;
    }
  }
  
  @media (max-width: 480px) {
    .solar-system {
      width: 400px;
      height: 400px;
    }
    
    .info-panel {
      font-size: 0.85rem;
      padding: 1rem;
    }

    .constellation-legend {
      font-size: 0.85rem;
      padding: 1rem;
      bottom: 7rem;
    }

    .constellation-legend-toggle-btn {
      bottom: 7rem;
    }
  }
</style>

<script>
  // Funcionalidad del Info Panel
  document.addEventListener('DOMContentLoaded', () => {
    const infoPanel = document.getElementById('info-panel');
    const closeBtn = document.getElementById('close-info-panel');
    const showBtn = document.getElementById('show-info-panel');
    
    // Funci√≥n para ocultar el panel
    const hidePanel = () => {
      if (infoPanel && showBtn) {
        infoPanel.classList.add('hidden');
        showBtn.classList.remove('hidden');
        // Guardar preferencia del usuario
        localStorage.setItem('infoPanelHidden', 'true');
      }
    };
    
    // Funci√≥n para mostrar el panel
    const showPanel = () => {
      if (infoPanel && showBtn) {
        infoPanel.classList.remove('hidden');
        showBtn.classList.add('hidden');
        // Guardar preferencia del usuario
        localStorage.setItem('infoPanelHidden', 'false');
      }
    };
    
    // Event listeners
    closeBtn?.addEventListener('click', hidePanel);
    showBtn?.addEventListener('click', showPanel);
    
    // Restaurar estado del panel desde localStorage
    const isHidden = localStorage.getItem('infoPanelHidden') === 'true';
    if (isHidden) {
      hidePanel();
    }
    
    // Auto-ocultar despu√©s de 10 segundos si es la primera visita
    const isFirstVisit = !localStorage.getItem('infoPanelHidden');
    if (isFirstVisit) {
      setTimeout(() => {
        // Solo auto-ocultar si el usuario no ha interactuado
        const stillFirstVisit = !localStorage.getItem('infoPanelHidden');
        if (stillFirstVisit) {
          hidePanel();
        }
      }, 10000);
    }
    
    // Animaci√≥n de entrada suave
    setTimeout(() => {
      if (infoPanel && !infoPanel.classList.contains('hidden')) {
        infoPanel.style.transform = 'translateY(0)';
        infoPanel.style.opacity = '1';
      }
    }, 500);

    // === Funcionalidad del Navigation Panel ===
    const navPanel = document.getElementById('navigation-panel');
    const navMinimizeBtn = document.getElementById('minimize-nav-panel');
    const navCloseBtn = document.getElementById('close-nav-panel');
    const navShowBtn = document.getElementById('show-nav-panel');
    const navMinimized = document.getElementById('nav-panel-minimized');
    const navContent = document.getElementById('nav-panel-content');

    // === Observer para ocultar panel en secci√≥n de constelaciones ===
    const observerOptions = {
      threshold: 0.5,
      rootMargin: '0px'
    };

    const sectionObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const sectionId = entry.target.id;
          
          if (sectionId === 'constellations-section') {
            // Ocultar panel del sistema solar en secci√≥n de constelaciones
            navPanel?.classList.add('hide-in-constellations');
          } else if (sectionId === 'solar-system-section') {
            // Mostrar panel del sistema solar en su secci√≥n
            navPanel?.classList.remove('hide-in-constellations');
          }
        }
      });
    }, observerOptions);

    // Observar las secciones
    const solarSystemSection = document.getElementById('solar-system-section');
    const constellationsSection = document.getElementById('constellations-section');
    
    if (solarSystemSection) sectionObserver.observe(solarSystemSection);
    if (constellationsSection) sectionObserver.observe(constellationsSection);

    // Estados del navigation panel
    let navState = 'expanded'; // 'expanded', 'minimized', 'hidden'

    // Funci√≥n para minimizar el panel
    const minimizeNavPanel = () => {
      if (navPanel && navMinimized) {
        navPanel.classList.add('hidden');
        navMinimized.classList.remove('hidden');
        navState = 'minimized';
        localStorage.setItem('navPanelState', 'minimized');
      }
    };

    // Funci√≥n para expandir el panel
    const expandNavPanel = () => {
      if (navPanel && navMinimized) {
        navPanel.classList.remove('hidden');
        navMinimized.classList.add('hidden');
        navState = 'expanded';
        localStorage.setItem('navPanelState', 'expanded');
      }
    };

    // Funci√≥n para ocultar completamente el panel
    const hideNavPanel = () => {
      if (navPanel && navShowBtn && navMinimized) {
        navPanel.classList.add('hidden');
        navMinimized.classList.add('hidden');
        navShowBtn.classList.remove('hidden');
        navState = 'hidden';
        localStorage.setItem('navPanelState', 'hidden');
      }
    };

    // Funci√≥n para mostrar el panel
    const showNavPanel = () => {
      if (navPanel && navShowBtn && navMinimized) {
        navPanel.classList.remove('hidden');
        navMinimized.classList.add('hidden');
        navShowBtn.classList.add('hidden');
        navState = 'expanded';
        localStorage.setItem('navPanelState', 'expanded');
      }
    };

    // Event listeners para navigation panel
    navMinimizeBtn?.addEventListener('click', minimizeNavPanel);
    navCloseBtn?.addEventListener('click', hideNavPanel);
    navShowBtn?.addEventListener('click', showNavPanel);
    navMinimized?.addEventListener('click', expandNavPanel);

    // Restaurar estado del navigation panel
    const savedNavState = localStorage.getItem('navPanelState') || 'expanded';
    switch (savedNavState) {
      case 'minimized':
        minimizeNavPanel();
        break;
      case 'hidden':
        hideNavPanel();
        break;
      case 'expanded':
      default:
        expandNavPanel();
        break;
    }

    // Auto-minimizar el navigation panel despu√©s de 15 segundos si es la primera visita
    const isFirstNavVisit = !localStorage.getItem('navPanelState');
    if (isFirstNavVisit) {
      setTimeout(() => {
        const stillFirstNavVisit = !localStorage.getItem('navPanelState');
        if (stillFirstNavVisit && navState === 'expanded') {
          minimizeNavPanel();
        }
      }, 15000);
    }

    // === Funcionalidad de la Leyenda de Constelaciones ===
    const constellationLegend = document.getElementById('constellation-legend');
    const closeLegendBtn = document.getElementById('close-constellation-legend');
    const showLegendBtn = document.getElementById('show-constellation-legend');

    // Funci√≥n para ocultar la leyenda
    const hideLegend = () => {
      if (constellationLegend && showLegendBtn) {
        constellationLegend.classList.add('hidden');
        showLegendBtn.classList.remove('hidden');
        localStorage.setItem('constellationLegendHidden', 'true');
      }
    };

    // Funci√≥n para mostrar la leyenda
    const showLegend = () => {
      if (constellationLegend && showLegendBtn) {
        constellationLegend.classList.remove('hidden');
        showLegendBtn.classList.add('hidden');
        localStorage.setItem('constellationLegendHidden', 'false');
      }
    };

    // Event listeners para la leyenda
    closeLegendBtn?.addEventListener('click', hideLegend);
    showLegendBtn?.addEventListener('click', showLegend);

    // Restaurar estado de la leyenda
    const isLegendHidden = localStorage.getItem('constellationLegendHidden') === 'true';
    if (isLegendHidden) {
      hideLegend();
    }

    // Auto-ocultar la leyenda despu√©s de 20 segundos si es la primera visita
    const isFirstLegendVisit = !localStorage.getItem('constellationLegendHidden');
    if (isFirstLegendVisit) {
      setTimeout(() => {
        const stillFirstLegendVisit = !localStorage.getItem('constellationLegendHidden');
        if (stillFirstLegendVisit) {
          hideLegend();
        }
      }, 20000);
    }
  });
</script>
