---
import type { Constellation, Star } from '../types/constellation';
import { constellations } from '../data/constellations';

export interface Props {
  currentPlanet?: string;
}

const { currentPlanet = '' } = Astro.props;
---

<div class="interactive-starfield">
  <!-- Fondo estrellado aleatorio con más densidad -->
  <div class="starfield-background">
    {Array.from({ length: 400 }, (_, i) => {
      const x = Math.random() * 100;
      const y = Math.random() * 100;
      // Crear más estrellas en los bordes donde están las constelaciones
      const isEdge = x < 15 || x > 85 || y < 15 || y > 85;
      const opacity = isEdge ? 0.4 + Math.random() * 0.5 : 0.2 + Math.random() * 0.3;
      return (
        <div 
          class="background-star"
          style={`
            left: ${x}%;
            top: ${y}%;
            animation-delay: ${Math.random() * 4}s;
            opacity: ${opacity};
          `}
        ></div>
      );
    })}
  </div>

  <!-- Nebulosas de fondo -->
  <div class="nebula nebula-1"></div>
  <div class="nebula nebula-2"></div>
  <div class="nebula nebula-3"></div>

  <!-- Constelaciones -->
  <div class="constellations-container">
    {constellations.map((constellation) => (
      <div 
        class={`constellation ${constellation.planet === currentPlanet ? 'active' : ''}`}
        data-constellation={constellation.id}
        data-planet={constellation.planet}
      >
        <!-- Líneas de constelación -->
        <svg class="constellation-lines" viewBox="0 0 100 100" preserveAspectRatio="none">
          {constellation.lines?.map((line) => {
            const [startIdx, endIdx] = line;
            const startStar = constellation.stars[startIdx];
            const endStar = constellation.stars[endIdx];
            return (
              <line
                class="constellation-line"
                x1={startStar.x}
                y1={startStar.y}
                x2={endStar.x}
                y2={endStar.y}
              />
            );
          })}
        </svg>

        <!-- Estrellas -->
        {constellation.stars.map((star, starIndex) => (
          <div
            class="constellation-star"
            style={`left: ${star.x}%; top: ${star.y}%; opacity: ${star.brightness};`}
            data-star-name={star.name}
            data-constellation={constellation.name}
          >
            <div class="star-glow"></div>
            <div class="star-tooltip">
              <div class="tooltip-star-name">{star.name}</div>
              <div class="tooltip-constellation">{constellation.name}</div>
            </div>
          </div>
        ))}

        <!-- Etiqueta de constelación -->
        <div 
          class="constellation-label"
          style={`
            left: ${constellation.stars.reduce((sum, star) => sum + star.x, 0) / constellation.stars.length - 3}%;
            top: ${constellation.stars.reduce((sum, star) => sum + star.y, 0) / constellation.stars.length + 5}%;
          `}
        >
          <span class="constellation-distinctive-name">{constellation.distinctiveName}</span>
          <span class="constellation-traditional-name">({constellation.name})</span>
          <span class="constellation-planet">→ {constellation.planet}</span>
        </div>
      </div>
    ))}
  </div>

  <!-- Estrellas fugaces -->
  <div class="shooting-stars">
    {Array.from({ length: 5 }, (_, i) => (
      <div 
        class="shooting-star"
        style={`
          animation-delay: ${i * 8 + Math.random() * 5}s;
          animation-duration: ${2 + Math.random() * 2}s;
        `}
      ></div>
    ))}
  </div>
</div>

<style>
  .interactive-starfield {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 5; /* Reducido para estar por debajo del solar system */
    /* Gradiente sutil para enfatizar los bordes */
    background: radial-gradient(
      ellipse at center,
      transparent 25%, 
      rgba(135, 206, 235, 0.02) 60%, 
      rgba(135, 206, 235, 0.05) 85%,
      rgba(135, 206, 235, 0.08) 100%
    );
  }

  /* Fondo estrellado */
  .starfield-background {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  .background-star {
    position: absolute;
    width: 2px;
    height: 2px;
    background: white;
    border-radius: 50%;
    animation: gentle-twinkle 4s infinite;
  }

  /* Constelaciones */
  .constellations-container {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .constellation {
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0.9;
    transition: all 0.5s ease;
  }

  .constellation:hover,
  .constellation.hover {
    opacity: 1;
    z-index: 10;
  }

  .constellation.active {
    opacity: 1;
    z-index: 15;
    filter: brightness(1.3);
  }

  .constellation.active .constellation-label {
    animation: active-label-glow 2s ease-in-out infinite;
  }

  .constellation.active .constellation-distinctive-name {
    color: #FFD700;
    text-shadow: 
      0 0 15px rgba(255, 215, 0, 1), 
      0 0 30px rgba(255, 215, 0, 0.8);
  }

  .constellation-lines {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 5;
  }

  .constellation-line {
    stroke: #87CEEB;
    stroke-width: 0.1; /* Reducido de 0.15 a 0.1 */
    opacity: 0.4; /* Ligeramente más transparente */
    transition: opacity 0.3s ease;
    filter: drop-shadow(0 0 1px #87CEEB); /* Sombra más sutil */
  }

  .constellation:hover .constellation-line,
  .constellation.hover .constellation-line,
  .constellation.active .constellation-line {
    opacity: 0.8;
    animation: line-pulse 2s ease-in-out infinite;
  }

  /* Estrellas de constelación - tamaño más pequeño */
  .constellation-star {
    position: absolute;
    width: 4px; /* Reducido de 7px a 4px */
    height: 4px; /* Reducido de 7px a 4px */
    background: radial-gradient(circle, #fff, #87CEEB);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.3s ease;
    z-index: 20; /* Por encima de las líneas de constelación */
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.7), 0 0 10px rgba(135, 206, 235, 0.3); /* Sombras más pequeñas */
    pointer-events: auto; /* Asegurar que sea interactiva */
    cursor: pointer;
  }

  .constellation:hover .constellation-star,
  .constellation.hover .constellation-star {
    animation: star-glow 1.5s ease-in-out infinite;
    box-shadow: 0 0 10px #ffd700, 0 0 20px rgba(255, 215, 0, 0.3); /* Sombras más pequeñas */
    transform: translate(-50%, -50%) scale(1.2); /* Escala ligeramente mayor para compensar el tamaño */
  }

  .star-glow {
    position: absolute;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.3), transparent);
    border-radius: 50%;
    top: -50%;
    left: -50%;
    animation: ripple-effect 3s infinite;
  }

  /* Tooltip para estrellas */
  .star-tooltip {
    position: absolute;
    bottom: 120%;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.95);
    color: white;
    padding: 6px 10px;
    border-radius: 6px;
    font-size: 0.75rem;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 1000;
    backdrop-filter: blur(8px);
    border: 1px solid rgba(135, 206, 235, 0.5);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    pointer-events: none;
  }

  .star-tooltip.visible {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(-2px);
  }

  .tooltip-star-name {
    color: #87CEEB;
    font-weight: bold;
    font-size: 0.8rem;
  }

  .tooltip-constellation {
    color: rgba(255, 255, 255, 0.9);
    font-size: 0.65rem;
    margin-top: 2px;
  }

  .constellation-star:hover .star-tooltip {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(-2px);
  }

  .constellation-star {
    cursor: pointer;
  }

  /* Etiquetas de constelación */
  .constellation-label {
    position: absolute;
    text-align: center;
    color: white;
    font-family: 'Space Mono', monospace;
    pointer-events: none;
    transition: all 0.3s ease;
    opacity: 0.7;
    z-index: 25;
  }

  .constellation:hover .constellation-label,
  .constellation.hover .constellation-label {
    opacity: 1;
    animation: label-glow 2s ease-in-out infinite;
  }

  .constellation-distinctive-name {
    display: block;
    color: #87CEEB;
    font-size: 0.7rem; /* Reducido de 0.9rem a 0.7rem */
    font-weight: bold;
    text-shadow: 
      0 0 8px rgba(135, 206, 235, 1), 
      0 0 15px rgba(135, 206, 235, 0.8); /* Sombras más pequeñas */
    margin-bottom: 1px; /* Reducido de 2px a 1px */
    letter-spacing: 0.5px; /* Reducido de 0.8px a 0.5px */
    background: rgba(0, 0, 0, 0.6);
    padding: 1px 6px; /* Reducido de 2px 8px a 1px 6px */
    border-radius: 6px; /* Reducido de 8px a 6px */
    backdrop-filter: blur(5px);
  }

  .constellation-traditional-name {
    display: block;
    color: #B0C4DE;
    font-size: 0.55rem; /* Reducido de 0.65rem a 0.55rem */
    font-style: italic;
    text-shadow: 0 0 6px rgba(176, 196, 222, 1); /* Sombra más pequeña */
    margin-bottom: 2px; /* Reducido de 3px a 2px */
    opacity: 0.95;
    background: rgba(0, 0, 0, 0.4);
    padding: 1px 4px; /* Reducido de 1px 6px a 1px 4px */
    border-radius: 3px; /* Reducido de 4px a 3px */
  }

  .constellation-planet {
    display: block;
    color: #ffd700;
    font-size: 0.5rem; /* Reducido de 0.6rem a 0.5rem */
    margin-top: 1px; /* Reducido de 2px a 1px */
    text-shadow: 0 0 4px rgba(255, 215, 0, 1), 0 0 8px rgba(255, 215, 0, 0.4); /* Sombras más pequeñas */
  }

  /* Estrellas fugaces */
  .shooting-stars {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 30;
  }

  .shooting-star {
    position: absolute;
    width: 2px;
    height: 2px;
    background: white;
    border-radius: 50%;
    opacity: 0;
    animation: shooting 4s linear infinite;
  }

  .shooting-star::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100px;
    height: 1px;
    background: linear-gradient(90deg, white, transparent);
    transform: translateX(-100px);
  }

  /* Nebulosas */
  .nebula {
    position: absolute;
    border-radius: 50%;
    filter: blur(40px);
    opacity: 0.1;
    animation: nebula-drift 20s ease-in-out infinite;
    pointer-events: none;
  }

  .nebula-1 {
    width: 300px;
    height: 200px;
    background: radial-gradient(ellipse, rgba(135, 206, 235, 0.3), transparent);
    top: 20%;
    left: 10%;
    animation-delay: 0s;
  }

  .nebula-2 {
    width: 250px;
    height: 180px;
    background: radial-gradient(ellipse, rgba(255, 182, 193, 0.2), transparent);
    top: 60%;
    right: 15%;
    animation-delay: 7s;
  }

  .nebula-3 {
    width: 200px;
    height: 150px;
    background: radial-gradient(ellipse, rgba(221, 160, 221, 0.25), transparent);
    bottom: 25%;
    left: 70%;
    animation-delay: 14s;
  }

  /* Animaciones */
  @keyframes gentle-twinkle {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 0.8; transform: scale(1.2); }
  }

  @keyframes star-glow {
    0%, 100% { box-shadow: 0 0 10px #ffd700, 0 0 20px rgba(255, 215, 0, 0.3); }
    50% { box-shadow: 0 0 20px #ffd700, 0 0 40px rgba(255, 215, 0, 0.6); }
  }

  @keyframes line-pulse {
    0%, 100% { opacity: 0.8; stroke-width: 0.1; }
    50% { opacity: 1; stroke-width: 0.15; }
  }

  @keyframes shooting {
    0% { 
      opacity: 0; 
      transform: translateX(-100px) translateY(-100px); 
    }
    10% { opacity: 1; }
    90% { opacity: 1; }
    100% { 
      opacity: 0; 
      transform: translateX(calc(100vw + 100px)) translateY(calc(100vh + 100px)); 
    }
  }

  @keyframes nebula-drift {
    0%, 100% { transform: translate(0, 0) scale(1); }
    33% { transform: translate(20px, -15px) scale(1.1); }
    66% { transform: translate(-15px, 10px) scale(0.9); }
  }

  @keyframes ripple-effect {
    0% { transform: scale(0); opacity: 1; }
    100% { transform: scale(4); opacity: 0; }
  }

  @keyframes label-glow {
    0%, 100% { text-shadow: 0 0 8px rgba(135, 206, 235, 1), 0 0 15px rgba(135, 206, 235, 0.8); }
    50% { text-shadow: 0 0 15px rgba(135, 206, 235, 1), 0 0 25px rgba(135, 206, 235, 0.9); }
  }

  @keyframes gentle-label-pulse {
    0%, 100% { opacity: 0.7; }
    50% { opacity: 1; }
  }

  @keyframes active-label-glow {
    0%, 100% { 
      text-shadow: 0 0 15px rgba(255, 215, 0, 1), 0 0 30px rgba(255, 215, 0, 0.8);
      transform: scale(1);
    }
    50% { 
      text-shadow: 0 0 25px rgba(255, 215, 0, 1), 0 0 40px rgba(255, 215, 0, 0.9);
      transform: scale(1.05);
    }
  }

  /* Responsive */
  @media (max-width: 768px) {
    .constellation-distinctive-name {
      font-size: 0.6rem;
      padding: 1px 4px;
    }

    .constellation-traditional-name {
      font-size: 0.5rem;
    }

    .constellation-planet {
      font-size: 0.45rem;
    }

    .constellation-star {
      width: 3px;
      height: 3px;
    }

    .star-tooltip {
      font-size: 0.6rem;
      padding: 3px 6px;
    }
  }
</style>

<script>
  // Script para navegación por constelaciones
  document.addEventListener('DOMContentLoaded', () => {
    const constellations = document.querySelectorAll('.constellation');
    const stars = document.querySelectorAll('.constellation-star');
    
    // Hover effects para constelaciones
    constellations.forEach(constellation => {
      constellation.addEventListener('mouseenter', () => {
        constellation.classList.add('hover');
      });
      
      constellation.addEventListener('mouseleave', () => {
        constellation.classList.remove('hover');
      });
      
      // Click para navegar al planeta
      constellation.addEventListener('click', () => {
        const planet = constellation.getAttribute('data-planet');
        const constellationId = constellation.getAttribute('data-constellation');
        
        // Disparar evento de navegación
        const event = new CustomEvent('constellation-planet-navigate', {
          detail: { planet, constellationId }
        });
        window.dispatchEvent(event);
      });
    });
    
    // Tooltips para estrellas
    stars.forEach(star => {
      const tooltip = star.querySelector('.star-tooltip');
      
      star.addEventListener('mouseenter', () => {
        tooltip?.classList.add('visible');
      });
      
      star.addEventListener('mouseleave', () => {
        tooltip?.classList.remove('visible');
      });
    });
    
    // Escuchar cambios de filtros
    window.addEventListener('constellation-filter-change', (e: any) => {
      const { filter } = e.detail;
      
      constellations.forEach(constellation => {
        const constellationId = constellation.getAttribute('data-constellation');
        
        if (filter === 'all') {
          (constellation as HTMLElement).style.display = 'block';
        } else {
          // Aquí deberías implementar la lógica de filtros basada en categorías
          // Por simplicidad, mostramos todas por ahora
          (constellation as HTMLElement).style.display = 'block';
        }
      });
    });
    
    // Escuchar selecciones del minimap
    window.addEventListener('minimap-constellation-select', (e: any) => {
      const { constellationId } = e.detail;
      
      // Resaltar constelación seleccionada
      constellations.forEach(constellation => {
        constellation.classList.remove('active');
        if (constellation.getAttribute('data-constellation') === constellationId) {
          constellation.classList.add('active');
          
          // Scroll hacia la constelación (si fuera necesario)
          constellation.scrollIntoView({ 
            behavior: 'smooth', 
            block: 'center' 
          });
        }
      });
    });
    
    // Escuchar búsquedas
    window.addEventListener('constellation-search-select', (e: any) => {
      const { type, id, name } = e.detail;
      
      if (type === 'constellation') {
        // Resaltar constelación
        constellations.forEach(constellation => {
          constellation.classList.remove('active');
          if (constellation.getAttribute('data-constellation') === id) {
            constellation.classList.add('active');
          }
        });
      } else if (type === 'star') {
        // Resaltar estrella específica
        stars.forEach(star => {
          if (star.getAttribute('data-star-name') === name) {
            (star as HTMLElement).style.animation = 'star-glow 1s ease-in-out 3';
            
            // Resaltar también la constelación padre
            const parentConstellation = star.closest('.constellation');
            parentConstellation?.classList.add('active');
          }
        });
      }
    });
  });
</script>
